script(src = 'sage/client.js')
script(type='text/javascript').
  //var session = new Sage();
  console.log('********************************');
  //$("#yamcs-instance-selected").text(newInstance);
  console.log($("#yamcs-instance-selected").text);
  //session.bind_instance(newInstance);
  //console.log('yamcs-instance-selected  ' + selected.name);
  //sage.StopSession();

.row
  .col-xs-12.col-sm-7.col-md-7.col-lg-4
    h1.page-title.txt-color-blueDark
      block header 

#content
  section#widget-grid(data-widget-grid)
    block main

script(type='text/javascript').
  pageSetUp();

  !(function ($, undefined) {
    /// adapted http://jsfiddle.net/drzaus/Hgjfh/5/

    var get_selector = function (element) {
        var pieces = [];

        for (; element && element.tagName !== undefined; element = element.parentNode) {
            if (element.className) {
                var classes = element.className.split(' ');
                for (var i in classes) {
                    if (classes.hasOwnProperty(i) && classes[i]) {
                        pieces.unshift(classes[i]);
                        pieces.unshift('.');
                    }
                }
            }
            if (element.id && !/\s/.test(element.id)) {
                pieces.unshift(element.id);
                pieces.unshift('#');
            }
            pieces.unshift(element.tagName);
            pieces.unshift(' > ');
        }

        return pieces.slice(1).join('');
    };

    $.fn.getSelector = function (only_one) {
        if (true === only_one) {
            return get_selector(this[0]);
        } else {
            return $.map(this, function (el) {
                return get_selector(el);
            });
        }
    };

  })(window.jQuery);
 
  $('[data-sage]').each(function() {
    var obj = $(this).attr('data-sage');
    var jsonObj;
    if (typeof obj === 'string' || obj instanceof String) {
      // it's a string
      jsonObj = JSON.parse(obj);
    }
    else if(typeof obj === 'object' || obj instanceof Object) {
      // it's an object
      jsonObj = obj;
    }
    else {
      // it's something else 
      return;
    }

    if(typeof $(this).attr('id') != 'undefined') {
      var uuid = generateUUID();
      console.log('*** ' + uuid);
      $(this).attr('id', uuid);
    }
    else
    {
      console.log($(this).attr('id'));
      console.log(typeof $(this));
    }

    if(jsonObj.hasOwnProperty('tlm'))
    {
      /* This is a telemetry object. */
      var menu = new BootstrapMenu(null, {
        /* group actions by their id to make use of separators between
         * them in the context menu. Actions not added to any group with
         * this option will appear in a default group of their own. */
        container: $(this).parent(),
        /* you can declare 'actions' as an object instead of an array,
         * and its keys will be used as action ids. */
        actions: {
          dataPlot: {
            name: 'Data Plot' + jsonObj.tlm.name,
            iconClass: 'fa-folder-o',
            onClick: function() {
              window.open('#view/probe/plot.pug?' + $.param({instance: session.selectedInstance, name: jsonObj.tlm.name}, false));
            },
            isEnabled: function() {
              return true;
            }
          }
        }
      });

    } 
    if(jsonObj.hasOwnProperty('cmd'))
    {
      /* This is a command object. */
    } 
  });


block scripts
  script(type='text/javascript').


script(type='text/javascript').
  //sage.StartSession();
