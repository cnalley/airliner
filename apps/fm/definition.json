{
    "short_name": "fm",
    "long_name": "File Manager",
    "ide": {
        "view" : {
            "0": {
                "dbPath": "tables",
                "viewClass": "com.windhoverlabs.ide.dialogs.GenericTableEditor"
            }
        }
    },
    "code_templates": {
    },
    "commands": {
        "FM_CMD_MID": { "msgid": "", "commands": {
            "Noop":          { "cc":  0, "struct": "FM_NoopCmd_t" },
            "Reset":         { "cc":  1, "struct": "FM_ResetCmd_t" },
            "CopyFile":      { "cc":  2, "struct": "FM_CopyFileCmd_t"  },
            "MoveFile":      { "cc":  3, "struct": "FM_MoveFileCmd_t"  },
            "RenameFile":    { "cc":  4, "struct": "FM_RenameFileCmd_t"  },
            "DeleteFile":    { "cc":  5, "struct": "FM_DeleteFileCmd_t"  },
            "DeleteAll":     { "cc":  7, "struct": "FM_DeleteAllCmd_t" },
            "Decompress":    { "cc":  8, "struct": "FM_DecompressCmd_t" },
            "Concat":        { "cc":  9, "struct": "FM_ConcatCmd_t" },
            "GetFileInfo":   { "cc": 10, "struct": "FM_GetFileInfoCmd_t" },
            "GetOpenFiles":  { "cc": 11, "struct": "FM_GetOpenFilesCmd_t" },
            "CreateDir":     { "cc": 12, "struct": "FM_CreateDirCmd_t" },
            "DeleteDir":     { "cc": 13, "struct": "FM_DeleteDirCmd_t" },
            "GetDirFile":    { "cc": 14, "struct": "FM_GetDirFileCmd_t" },
            "GetDirPkt":     { "cc": 15, "struct": "FM_GetDirPktCmd_t" },
            "GetFreeSpace":  { "cc": 16, "struct": "FM_GetFreeSpaceCmd_t" },
            "SetTableState": { "cc": 17, "struct": "FM_SetTableStateCmd_t" },
            "SetPerm":       { "cc": 19, "struct": "FM_SetPermCmd_t" }
        }},
        "FM_SEND_HK_MID": { "msgid": "", "commands": {
            "SendHK": { "cc":  0, "struct": "FM_HousekeepingCmd_t" }
        }}
    },
    "telemetry": { 
        "FM_HK_TLM_MID":         { "msgid": "", "struct": "FM_HousekeepingPkt_t"},
        "FM_OPEN_FILES_TLM_MID": { "msgid": "", "struct": "FM_OpenFilesPkt_t" },
        "FM_FREE_SPACE_TLM_MID": { "msgid": "", "struct": "FM_FreeSpacePkt_t" },
        "FM_FILE_INFO_TLM_MID":  { "msgid": "", "struct": "FM_FileInfoPkt_t" },
        "FM_DIR_LIST_TLM_MID":   { "msgid": "", "struct": "FM_DirListPkt_t" }
    },
    "events": {
        "SCH_INITSTATS_INF_EID":             {"id":  1},
        "FM_STARTUP_EID":                    {"id": 1},
        "FM_STARTUP_EVENTS_ERR_EID":         {"id": 2},
        "FM_STARTUP_CREAT_PIPE_ERR_EID":     {"id": 3},
        "FM_STARTUP_SUBSCRIB_HK_ERR_EID":    {"id": 4},
        "FM_STARTUP_SUBSCRIB_GCMD_ERR_EID":  {"id": 5},
        "FM_STARTUP_TABLE_INIT_ERR_EID":     {"id": 6},
        "FM_SB_RECEIVE_ERR_EID":             {"id": 7},
        "FM_EXIT_ERR_EID":                   {"id": 8},
        "FM_MID_ERR_EID":                    {"id": 9},
        "FM_CC_ERR_EID":                     {"id": 10},
        "FM_HK_REQ_ERR_EID":                 {"id": 11},
        "FM_NOOP_CMD_EID":                   {"id": 12},
        "FM_NOOP_PKT_ERR_EID":               {"id": 13},
        "FM_RESET_CMD_EID":                  {"id": 14},
        "FM_RESET_PKT_ERR_EID":              {"id": 15},
        "FM_COPY_CMD_EID":                   {"id": 16},
        "FM_COPY_PKT_ERR_EID":               {"id": 17},
        "FM_COPY_OVR_ERR_EID":               {"id": 18},
        "FM_COPY_SRC_ERR_EID":               {"id": 19},
        "FM_COPY_TGT_ERR_EID":               {"id": 20},
        "FM_COPY_CHILD_ERR_EID":             {"id": 21},
        "FM_COPY_OS_ERR_EID":                {"id": 22},
        "FM_MOVE_CMD_EID":                   {"id": 23},
        "FM_MOVE_PKT_ERR_EID":               {"id": 24},
        "FM_MOVE_OVR_ERR_EID":               {"id": 25},
        "FM_MOVE_SRC_ERR_EID":               {"id": 26},
        "FM_MOVE_TGT_ERR_EID":               {"id": 27},
        "FM_MOVE_CHILD_ERR_EID":             {"id": 28},
        "FM_MOVE_OS_ERR_EID":                {"id": 29},
        "FM_RENAME_CMD_EID":                 {"id": 30},
        "FM_RENAME_PKT_ERR_EID":             {"id": 31},
        "FM_RENAME_SRC_ERR_EID":             {"id": 32},
        "FM_RENAME_TGT_ERR_EID":             {"id": 33},
        "FM_RENAME_CHILD_ERR_EID":           {"id": 34},
        "FM_RENAME_OS_ERR_EID":              {"id": 35},
        "FM_DELETE_CMD_EID":                 {"id": 36},
        "FM_DELETE_PKT_ERR_EID":             {"id": 37},
        "FM_DELETE_SRC_ERR_EID":             {"id": 38},
        "FM_DELETE_CHILD_ERR_EID":           {"id": 39},
        "FM_DELETE_OS_ERR_EID":              {"id": 40},
        "FM_DELETE_ALL_CMD_EID":             {"id": 41},
        "FM_DELETE_ALL_WARNING_EID":         {"id": 42},
        "FM_DELETE_ALL_PKT_ERR_EID":         {"id": 43},
        "FM_DELETE_ALL_SRC_ERR_EID":         {"id": 44},
        "FM_DELETE_ALL_CHILD_ERR_EID":       {"id": 45},
        "FM_DELETE_ALL_OS_ERR_EID":          {"id": 46},
        "FM_DECOM_CMD_EID":                  {"id": 47},
        "FM_DECOM_PKT_ERR_EID":              {"id": 48},
        "FM_DECOM_SRC_ERR_EID":              {"id": 49},
        "FM_DECOM_TGT_ERR_EID":              {"id": 50},
        "FM_DECOM_CHILD_ERR_EID":            {"id": 51},
        "FM_DECOM_CFE_ERR_EID":              {"id": 52},
        "FM_CONCAT_CMD_EID":                 {"id": 53},
        "FM_CONCAT_PKT_ERR_EID":             {"id": 54},
        "FM_CONCAT_SRC1_ERR_EID":            {"id": 55},
        "FM_CONCAT_SRC2_ERR_EID":            {"id": 56},
        "FM_CONCAT_TGT_ERR_EID":             {"id": 57},
        "FM_CONCAT_CHILD_ERR_EID":           {"id": 58},
        "FM_CONCAT_OS_ERR_EID":              {"id": 59},
        "FM_GET_FILE_INFO_CMD_EID":          {"id": 60},
        "FM_GET_FILE_INFO_PKT_ERR_EID":      {"id": 61},
        "FM_GET_FILE_INFO_SRC_ERR_EID":      {"id": 62},
        "FM_GET_FILE_INFO_CHILD_ERR_EID":    {"id": 63},
        "FM_GET_FILE_INFO_WARNING_EID":      {"id": 64},
        "FM_GET_OPEN_FILES_CMD_EID":         {"id": 65},
        "FM_GET_OPEN_FILES_PKT_ERR_EID":     {"id": 66},
        "FM_CREATE_DIR_CMD_EID":             {"id": 67},
        "FM_CREATE_DIR_PKT_ERR_EID":         {"id": 68},
        "FM_CREATE_DIR_SRC_ERR_EID":         {"id": 69},
        "FM_CREATE_DIR_CHILD_ERR_EID":       {"id": 70},
        "FM_CREATE_DIR_OS_ERR_EID":          {"id": 71},
        "FM_DELETE_DIR_CMD_EID":             {"id": 72},
        "FM_DELETE_DIR_PKT_ERR_EID":         {"id": 73},
        "FM_DELETE_DIR_SRC_ERR_EID":         {"id": 74},
        "FM_DELETE_DIR_CHILD_ERR_EID":       {"id": 75},
        "FM_DELETE_DIR_EMPTY_ERR_EID":       {"id": 76},
        "FM_DELETE_DIR_OS_ERR_EID":          {"id": 77},
        "FM_GET_DIR_FILE_CMD_EID":           {"id": 78},
        "FM_GET_DIR_FILE_PKT_ERR_EID":       {"id": 79},
        "FM_GET_DIR_FILE_SRC_ERR_EID":       {"id": 80},
        "FM_GET_DIR_FILE_TGT_ERR_EID":       {"id": 81},
        "FM_GET_DIR_FILE_WARNING_EID":       {"id": 82},
        "FM_GET_DIR_FILE_CHILD_ERR_EID":     {"id": 83},
        "FM_GET_DIR_FILE_OS_ERR_EID":        {"id": 84},
        "FM_GET_DIR_PKT_CMD_EID":            {"id": 85},
        "FM_GET_DIR_PKT_WARNING_EID":        {"id": 86},
        "FM_GET_DIR_PKT_PKT_ERR_EID":        {"id": 87},
        "FM_GET_DIR_PKT_SRC_ERR_EID":        {"id": 88},
        "FM_GET_DIR_PKT_CHILD_ERR_EID":      {"id": 89},
        "FM_GET_DIR_PKT_OS_ERR_EID":         {"id": 90},
        "FM_GET_FREE_SPACE_CMD_EID":         {"id": 91},
        "FM_GET_FREE_SPACE_PKT_ERR_EID":     {"id": 92},
        "FM_GET_FREE_SPACE_TBL_ERR_EID":     {"id": 93},
        "FM_SET_TABLE_STATE_CMD_EID":        {"id": 94},
        "FM_SET_TABLE_STATE_PKT_ERR_EID":    {"id": 95},
        "FM_SET_TABLE_STATE_TBL_ERR_EID":    {"id": 96},
        "FM_SET_TABLE_STATE_ARG_ERR_EID":    {"id": 97},
        "FM_SET_TABLE_STATE_UNUSED_ERR_EID": {"id": 98},
        "FM_TABLE_VERIFY_ERR_EID":           {"id": 99},
        "FM_CHILD_INIT_EID":                 {"id": 100},
        "FM_CHILD_INIT_ERR_EID":             {"id": 101},
        "FM_CHILD_TERM_ERR_EID":             {"id": 102},
        "FM_CHILD_EXE_ERR_EID":              {"id": 103},
        "FM_TABLE_VERIFY_EID":               {"id": 104},
        "FM_SET_PERM_ERR_EID":               {"id": 110},
        "FM_SET_PERM_CMD_EID":               {"id": 111},
        "FM_SET_PERM_OS_ERR_EID":            {"id": 112}
    },
    "perfids": {
        "FM_APPMAIN_PERF_ID":    {"value": ""},
        "FM_CHILD_TASK_PERF_ID": {"value": ""}
    },
    "tables": {
    },
    "config": {
        "FM_CHILD_TASK_FLAGS": { 
            "title":        "",
            "description":  "",
            "limits":       "",
            "value":        "OS_ENABLE_CORE_0"
        },
        "FM_APP_NAME": { 
            "title":        "File Manager Application Name",
            "description":  "This definition must match the name used at startup by the cFE Executive Services when creating the FM application.  Note that application names are also an argument to certain cFE commands. For example, the application name is needed to access tables via cFE Table Services commands.",
            "limits":       "FM requires that this name be defined, but otherwise places no limits on the definition.  Refer to CFE Executive Services for specific information on limits related to application names.",
            "value":        "FM"
        },
        "FM_APP_PIPE_NAME": { 
            "title":        "File Manager Command Pipe Name",
            "description":  "This definition is the name used at startup when creating a cFE Software Bus command pipe for the FM application.",
            "limits":       "FM requires that this name be defined, but otherwise places no limits on the definition.  Refer to CFE Software Bus Services for specific information on limits related to pipe names.",
            "value":        "FM_CMD_PIPE"
        },
        "FM_APP_PIPE_DEPTH": { 
            "title":        "File Manager Command Pipe Depth",
            "description":  "This definition sets the total number of packets that may queue in the FM command pipe.  The limit for individual message types in the queue is the default cFE Software Bus subscription limit of four.",
            "limits":       "The FM application limits this value to be no less than 4 and no greater than 20 packets at any one time in the command pipe.",
            "value":        "10"
        },
        "FM_MISSION_REV": { 
            "title":        "Mission specific version number for FM application",
            "description":  "An application version number consists of four parts: major version number, minor version number, revision number and mission specific revision number. The mission specific revision number is defined here and the other parts are defined in 'fm_version.h'.",
            "limits":       "Must be defined as a numeric value that is greater than or equal to zero.",
            "value":        "0"
        },
        "FM_DIR_LIST_FILE_DEFNAME": { 
            "title":        "Default Directory List Output Filename",
            "description":  "This definition is the default output filename used by the Get Directory List to File command handler when the output filename is not provided.  The default filename is used whenever the commanded output filename is the empty string.",
            "limits":       "The FM application does not place a limit on this configuration parameter, however the symbol must be defined and the name will be subject to the same verification tests as a commanded output filename.  Set this parameter to the empty string if no default filename is desired.",
            "value":        "/ram/fm_dirlist.out"
        },
        "FM_DIR_LIST_FILE_ENTRIES": { 
            "title":        "Maximum Directory List Output File Entries",
            "description":  "This definition sets the upper limit for the number of directory entries that may be written to a Directory List output file. Directory List files are variable length, based on the number of directory entries actually written to the file.  There may zero entries written to the file if the directory is empty.  For most environments, this definition will play no role at all, as it will be set to a number much larger than the count of files that will ever exist in any directory at one time.",
            "limits":       "The FM application limits this value to be no less than 100 and no greater than 10000.",
            "value":        "3000"
        },
        "FM_DIR_LIST_FILE_SUBTYPE": { 
            "title":        "Directory List Output File Header Sub-Type",
            "description":  "This definition sets the cFE File Header sub-type value for FM Directory List data files.  The value may be used to differentiate FM Directory List files from other data files.",
            "limits":       "The FM application places no limits on this unsigned 32 bit value.",
            "value":        "12345"
        },
        "FM_DIR_LIST_PKT_ENTRIES": { 
            "title":        "Directory List Telemetry Packet Entry Count",
            "description":  "This definition sets the number of directory entries contained in the Directory List telemetry packet.  The command handler will read directory entries until reaching the index of the start entry (set via command argument) and then continue to read directory entries and populate the telemtry packet until there are either no more unread directory entries or until the telemetry packet is full.",
            "limits":       "The FM application limits this value to be no less than 10 and and no greater than 100. The number of directory entries in the telemetry packet will in large part determine the packet size.",
            "value":        "20"
        },
        "FM_CHILD_FILE_BLOCK_SIZE": { 
            "title":        "Child Task File I/O Control Settings",
            "description":  "These definitions control the amount of file data that the FM child task will process before giving up the CPU to allow other tasks time to run.\nFM_CHILD_FILE_BLOCK_SIZE defines the size of each block of file data that the FM child task will read or write.  This value also defines the size of the FM child task I/O buffer that exists in global memory.\nFM_CHILD_FILE_LOOP_COUNT defines the number of file data blocks that may be processed before the FM child task sleeps (gives up the CPU).\nFM_CHILD_FILE_SLEEP_MS defines the length of time (in milli-secs) before the FM child task wakes (re-acquires the CPU).  Note that many platforms will limit the precision of this value.\nThus the combination of the 3 values control CPU use by the FM child task. Using a smaller block size minimizes the amount of RAM used by the file I/O buffer, but at the expense of file efficiency.  Adjust each of the values such that the combination is appropriate for the target platform.\nFor example, if the block size is 2048 and the loop count is 16 and the sleep time is 20, then while processing a 1 Mbyte file there will be 32 sleep cycles of 20ms each, for a total task delay of 0.64 seconds.",
            "limits":       "FM_CHILD_FILE_BLOCK_SIZE: The FM application limits this value to be no less than 256 bytes and no greater than 32KB.\nFM_CHILD_FILE_LOOP_COUNT: The FM application limits this value to be non-zero.  There is no upper limit - a very large number effectively means that the FM child task will not surrender the CPU to other lower priority tasks.\nFM_CHILD_FILE_SLEEP_MS: The FM application limits this value to be no greater than 100 ms.  The value zero generally means a very short task delay - refer to the target platform documentation for specifics.",
            "value":        "2048"
        },
        "FM_CHILD_FILE_LOOP_COUNT": { 
            "title":        "Child Task File I/O Control Settings",
            "description":  "These definitions control the amount of file data that the FM child task will process before giving up the CPU to allow other tasks time to run.\nFM_CHILD_FILE_BLOCK_SIZE defines the size of each block of file data that the FM child task will read or write.  This value also defines the size of the FM child task I/O buffer that exists in global memory.\nFM_CHILD_FILE_LOOP_COUNT defines the number of file data blocks that may be processed before the FM child task sleeps (gives up the CPU).\nFM_CHILD_FILE_SLEEP_MS defines the length of time (in milli-secs) before the FM child task wakes (re-acquires the CPU).  Note that many platforms will limit the precision of this value.\nThus the combination of the 3 values control CPU use by the FM child task. Using a smaller block size minimizes the amount of RAM used by the file I/O buffer, but at the expense of file efficiency.  Adjust each of the values such that the combination is appropriate for the target platform.\nFor example, if the block size is 2048 and the loop count is 16 and the sleep time is 20, then while processing a 1 Mbyte file there will be 32 sleep cycles of 20ms each, for a total task delay of 0.64 seconds.",
            "limits":       "FM_CHILD_FILE_BLOCK_SIZE: The FM application limits this value to be no less than 256 bytes and no greater than 32KB.\nFM_CHILD_FILE_LOOP_COUNT: The FM application limits this value to be non-zero.  There is no upper limit - a very large number effectively means that the FM child task will not surrender the CPU to other lower priority tasks.\nFM_CHILD_FILE_SLEEP_MS: The FM application limits this value to be no greater than 100 ms.  The value zero generally means a very short task delay - refer to the target platform documentation for specifics.",
            "value":        "16"
        },
        "FM_CHILD_FILE_SLEEP_MS": { 
            "title":        "Child Task File I/O Control Settings",
            "description":  "These definitions control the amount of file data that the FM child task will process before giving up the CPU to allow other tasks time to run.\nFM_CHILD_FILE_BLOCK_SIZE defines the size of each block of file data that the FM child task will read or write.  This value also defines the size of the FM child task I/O buffer that exists in global memory.\nFM_CHILD_FILE_LOOP_COUNT defines the number of file data blocks that may be processed before the FM child task sleeps (gives up the CPU).\nFM_CHILD_FILE_SLEEP_MS defines the length of time (in milli-secs) before the FM child task wakes (re-acquires the CPU).  Note that many platforms will limit the precision of this value.\nThus the combination of the 3 values control CPU use by the FM child task. Using a smaller block size minimizes the amount of RAM used by the file I/O buffer, but at the expense of file efficiency.  Adjust each of the values such that the combination is appropriate for the target platform.\nFor example, if the block size is 2048 and the loop count is 16 and the sleep time is 20, then while processing a 1 Mbyte file there will be 32 sleep cycles of 20ms each, for a total task delay of 0.64 seconds.",
            "limits":       "FM_CHILD_FILE_BLOCK_SIZE: The FM application limits this value to be no less than 256 bytes and no greater than 32KB.\nFM_CHILD_FILE_LOOP_COUNT: The FM application limits this value to be non-zero.  There is no upper limit - a very large number effectively means that the FM child task will not surrender the CPU to other lower priority tasks.\nFM_CHILD_FILE_SLEEP_MS: The FM application limits this value to be no greater than 100 ms.  The value zero generally means a very short task delay - refer to the target platform documentation for specifics.",
            "value":        "20"
        },
        "FM_CHILD_STAT_SLEEP_MS": { 
            "title":        "Child file stat sleep",
            "description":  "OS_stat is a CPU intensive call. FM uses the OS_stat call to query aile’s size, date, and mode when setting up directory listings. Querying a large number of files and/or files large in size when processing directory listing commands can cause FM to hog the CPU. To mitigate this, options to sleep a configurable number of milliseconds between calls to OS_stat for a configurable number of files in a directory listing is provided. A large sleep cycle will not hang the CPU but it may take a long time for directory listing to complete. A shorter sleep cycle will speed up the directory listing commands but may cause FM to hog the CPU.\nFM_CHILD_STAT_SLEEP_MS: The number of milliseconds to sleep each cycle. One cycle is FM_CHILD_STAT_SLEEP_FILECOUNT.\nFM_CHILD_STAT_SLEEP_FILECOUNT: The number of files to process (OS_stat) before sleeping FM_CHILD_STAT_SLEEP_MS. Works in tandem with FM_CHILD_STAT_SLEEP_MS to reduce CPU hogging while allowing slightly more customization to balance time the operator is waiting to get data back from a directory listing versus FM hogging the CPU with calls to OS_stat.\nIn short:\nHigh SLEEP_MS means less CPU hogging by FM but a longer time to process a dir listing command Low SLEEP_MS means more potential CPU hogging by FM but shorter time to process a dir listing command High FILECOUNT means more potential CPU hogging by FM but a shorter time to process a dir listing command Low FILECOUNT means less CPU hogging by FM but longer time to process a dir listing command",
            "limits":       "The default is zero unless the mission needs require them to be changed.",
            "value":        "0"
        },
        "FM_CHILD_STAT_SLEEP_FILECOUNT": { 
            "title":        "Child file stat sleep",
            "description":  "OS_stat is a CPU intensive call. FM uses the OS_stat call to query aile’s size, date, and mode when setting up directory listings. Querying a large number of files and/or files large in size when processing directory listing commands can cause FM to hog the CPU. To mitigate this, options to sleep a configurable number of milliseconds between calls to OS_stat for a configurable number of files in a directory listing is provided. A large sleep cycle will not hang the CPU but it may take a long time for directory listing to complete. A shorter sleep cycle will speed up the directory listing commands but may cause FM to hog the CPU.\nFM_CHILD_STAT_SLEEP_MS: The number of milliseconds to sleep each cycle. One cycle is FM_CHILD_STAT_SLEEP_FILECOUNT.\nFM_CHILD_STAT_SLEEP_FILECOUNT: The number of files to process (OS_stat) before sleeping FM_CHILD_STAT_SLEEP_MS. Works in tandem with FM_CHILD_STAT_SLEEP_MS to reduce CPU hogging while allowing slightly more customization to balance time the operator is waiting to get data back from a directory listing versus FM hogging the CPU with calls to OS_stat.\nIn short:\nHigh SLEEP_MS means less CPU hogging by FM but a longer time to process a dir listing command Low SLEEP_MS means more potential CPU hogging by FM but shorter time to process a dir listing command High FILECOUNT means more potential CPU hogging by FM but a shorter time to process a dir listing command Low FILECOUNT means less CPU hogging by FM but longer time to process a dir listing command",
            "limits":       "The default is zero unless the mission needs require them to be changed.",
            "value":        "0"
        },
        "FM_CHILD_QUEUE_DEPTH": { 
            "title":        "Child Task Command Queue Entry Count",
            "description":  "This definition sets the array depth for the command arguments queue in the FM main task to FM child task handshake interface.  The value sets the upper limit for the number of commands that can be waiting in the queue to be processed by the low priority FM child task.  A multi-entry command queue prevents the occasional slow command from being rejected because the child task has not yet completed the previous slow command.",
            "limits":       "The FM application limits this value to be no less than 1 and no greater than 10.  There must be at least one because this is the method for passing command arguments from the parent to the child task.  The upper limit is arbitrary.",
            "value":        "3"
        },
        "FM_CHILD_TASK_NAME": { 
            "title":        "Child Task Name - cFE object name",
            "description":  "This definition sets the FM child task object name.  The task object name is required during child task creation by cFE Executive Services.",
            "limits":       "FM requires that this name be defined, but otherwise places no limits on the definition.  Refer to CFE Executive Services for specific information on limits related to object names.",
            "value":        "FM_CHILD_TASK"
        },
        "FM_CHILD_TASK_STACK_SIZE": { 
            "title":        "Child Task Stack Size",
            "description":  "This definition sets the size in bytes of the FM child task stack.  It is highly recommended that this assignment be made by someone familiar with the system requirements for tasks running on the target platform.",
            "limits":       "The FM application limits this value to be no less than 2048 and no greater than 20480.  These limits are purely arbitrary and may need to be modified for specific platforms.",
            "value":        "20480"
        },
        "FM_CHILD_TASK_PRIORITY": { 
            "title":        "Child Task Execution Priority",
            "description":  "This definition sets the execution priority for the FM child task.  It is highly recommended that this assignment be made by someone familiar with the system requirements for tasks running on the target platform.\nNote that a small value has higher priority than a large value. Thus, 100 is higher priority than 150. It is also necessary to ensure that a child task has lower priority than its parent. It should be clear that a child task that runs ahead of its parent defeats the purpose of having a child task to run in the background.",
            "limits":       "Value to be no less than 1 and no greater than 255.  ",
            "value":        "205"
        },
        "FM_CHILD_SEM_NAME": { 
            "title":        "Child Task Semaphore Name - cFE object name",
            "description":  "This definition sets the FM child task semaphore object name. The semaphore object name is required during semaphore creation by cFE Executive Services.",
            "limits":       "FM requires that this name be defined, but otherwise places no limits on the definition.  Refer to CFE Executive Services for specific information on limits related to object names.",
            "value":        "FM_CHILD_SEM"
        },
        "FM_TABLE_CFE_NAME": { 
            "title":        "Free Space Table Name - cFE object name",
            "description":  "Table object name is required during table creation.",
            "limits":       "FM requires that this name be defined, but otherwise places no limits on the definition.  Refer to CFE Table Services for specific information on limits related to table names.",
            "value":        "FreeSpace"
        },
        "FM_TABLE_DEF_NAME": { 
            "title":        "Free Space Table Name - filename with path",
            "description":  "Table name with path is required to load table at startup.",
            "limits":       "FM requires that this name be defined, but otherwise places no limits on the definition.  If the named table does not exist or fails validation, the table load will fail.",
            "value":        "/cf/apps/fm_freespace.tbl"
        },
        "FM_TABLE_FILENAME": { 
            "title":        "Free Space Table Name - filename without path",
            "description":  "Table name without path defines the output name for the table  file created during the table make process.",
            "limits":       "FM requires that this name be defined, but otherwise places no limits on the definition.  If the table name is not valid then the make process may fail, or the table file may be unloadable to the target hardware.",
            "value":        "fm_freespace.tbl"
        },
        "FM_TABLE_DEF_DESC": { 
            "title":        "Free Space Table Description",
            "description":  "Table files contain headers that include descriptive text. This text will be put into the file header during the table make process.",
            "limits":       "FM requires that this name be defined, but otherwise places no limits on the definition.  Refer to cFE Table Services for limits related to table descriptive text.",
            "value":        "FM File System Free Space Table"
        },
        "FM_TABLE_ENTRY_COUNT": { 
            "title":        "Number of Free Space Table Entries",
            "description":  "This value defines the number of entries in both the FM file system free space table and the FM file system free space telemetry packet. Note: this value does not define the number of file systems present or supported by the CFE-OSAL, the value only defines the number of file systems for which FM may be enabled to report free space data.",
            "limits":       "FM limits this value to be not less than 1 and not greater than 16.",
            "value":        "8"
        },
        "FM_TABLE_VALIDATION_ERR": { 
            "title":        "Table Data Validation Error Code",
            "description":  "Table data is verified during the table load process.  Should the validation process fail, this value will be returned by FM to cFE Table Services and displayed in an event message.",
            "limits":       "FM requires that this value be defined, but otherwise places no limits on the definition.  Refer to cFE Table Services for limits related to error return values.",
            "value":        "0xCF000080L"
        }
    }
}
