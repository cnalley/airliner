  .row
    .col-lg-3
      .panel.panel-primary
        .panel-heading
          h3.panel-title C&DH
        .panel-body
          .table-responsive
            table.table.table-hover.table-condensed
               tbody
                    tr
                      td Last Telemetry Received
                      td ---
                    tr
                      td Command Accept Count
                      td
                        span.sage-tlm(tlmID='CFE_ES_CmdCounter') -----
                    tr
                      td Command Reject Count
                      td
                        span.sage-tlm(tlmID='CFE_ES_ErrCounter') -----

           .btn-toolbar
             button.btn.btn-primary.sage-cmd(type='button', cmdID='CFE_ARDrone_NOOP') No-Op
             button.btn.btn-primary.sage-cmd(type='button', cmdID='CFE_ARDrone_Reset') Reset
             
                
    .col-lg-3
      .panel.panel-primary
        .panel-heading
          h3.panel-title Version
        .panel-body
          .table-responsive
            table.table.table-hover.table-condensed
              tbody
                tr  
                  td CFE Version
                  td 
                    span.wh-tlm.span-inline-block(tlmID='CFE_ES_CFEMajorVersion') -
                    span.span-inline-block .
                    span.wh-tlm.span-inline-block(tlmID='CFE_ES_CFEMinorVersion') -
                    span.span-inline-block .
                    span.wh-tlm.span-inline-block(tlmID='CFE_ES_CFERevision') -     
                    span.span-inline-block .
                    span.wh-tlm.span-inline-block(tlmID='CFE_ES_CFEMissionRevision') -
                tr  
                  td OSAL Version
                  td 
                    span.wh-tlm.span-inline-block(tlmID='CFE_ES_OSALMajorVersion') -
                    span.span-inline-block .
                    span.wh-tlm.span-inline-block(tlmID='CFE_ES_OSALMinorVersion') -
                    span.span-inline-block .
                    span.wh-tlm.span-inline-block(tlmID='CFE_ES_OSALRevision') -     
                    span.span-inline-block .
                    span.wh-tlm.span-inline-block(tlmID='CFE_ES_OSALMissionRevision') -
                              
                tr    
                  td Checksum
                  td 
                    span.wh-tlm(tlmID='CFE_ES_CFECoreChecksum') -----
              
    .col-lg-3
      .panel.panel-primary
        .panel-heading
          h3.panel-title System Log
        .panel-body
          .table-responsive
            table.table.table-hover.table-condensed
             tbody
              tr  
               td Bytes used
               td 
                  span.wh-tlm(tlmID='CFE_ES_SysLogBytesUsed') ----- 
              tr
               td Entries
               td 
                  span.wh-tlm(tlmID='CFE_ES_SysLogEntries') -----
              tr
               td Mode
               td
                  span.wh-tlm(tlmID='CFE_ES_SysLogMode') -----
                  span.span-inline-block
                   .btn-toolbar.padleft
                    button.btn.btn-primary#CMD_SetSysLogMode(type='button') Set 

          .btn-toolbar  
           button#CMD_WriteSystemLogToFile.btn.btn-primary(type='button') Write to file
           button#CMD_ClearSysLog.btn.btn-primary(type='button') Clear log
    
    
    .col-lg-3
      .panel.panel-primary
        .panel-heading
          h3.panel-title Error Log
        .panel-body
         .table-responsive
            table.table.table-hover.table-condensed
             tbody
              tr  
               td Index
               td 
                  span.wh-tlm(tlmID='CFE_ES_ERLogIndex') -----
              tr
               td Entries
               td 
                  span.wh-tlm(tlmID='CFE_ES_ERLogEntries') -----

         .btn-toolbar 
          button#CMD_WriteErrorLogToFile.btn.btn-primary(type='button') Write to file
          button#CMD_ClearERLog.btn.btn-primary(type='button') Clear log
  
  
  .row
    .col-lg-3
      .panel.panel-primary
        .panel-heading
          h3.panel-title Initialization
        .panel-body
          .table-responsive
            table.table.table-hover.table-condensed
             tbody
              tr  
               td Reset type
               td
                  span.wh-tlm(tlmID='CFE_ES_ResetType') -----
              tr 
               td Reset subtype
               td 
                  span.wh-tlm(tlmID='CFE_ES_ResetSubtype') -----
              tr
               td Processor reset count
               td 
                  span.wh-tlm(tlmID='CFE_ES_ProcessorResets') -----
                  span.span-inline-block
                   .btn-toolbar.padleft
                    button#CMD_ResetPRCount.btn.btn-primary(type='button') Reset
              tr
               td Max processor resets
               td 
                  span.wh-tlm(tlmID='CFE_ES_MaxProcessorResets') -----
                  span.span-inline-block
                   .btn-toolbar.padleft
                    button#CMD_SetMaxResets.btn.btn-primary(type='button') Set
              tr
               td Boot source
               td 
                  span.wh-tlm(tlmID='CFE_ES_BootSource') -----
   
   
    .col-lg-3
      .panel.panel-primary
        .panel-heading
          h3.panel-title Registered Apps
        .panel-body
          .table-responsive
            table.table.table-hover.table-condensed
             tbody
              tr  
               td Core applications
               td 
                  span.wh-tlm(tlmID='CFE_ES_RegisteredCoreApps') -----
              tr
               td External applications
               td 
                  span.wh-tlm(tlmID='CFE_ES_RegisteredExternalApps') -----
              tr
               td Tasks
               td 
                  span.wh-tlm(tlmID='CFE_ES_RegisteredTasks') -----
              tr
               td Libraries
               td 
                  span.wh-tlm(tlmID='CFE_ES_RegisteredLibs') -----
   
   
    .col-lg-3
      .panel.panel-primary
        .panel-heading Heap
        .panel-body
          .table-responsive
            table.table.table-hover.table-condensed
             tbody
              tr  
               td Bytes free
               td 
                  span.wh-tlm(tlmID='CFE_ES_HeapBytesFree') -----
              tr
               td Blocks free
               td
                  span.wh-tlm(tlmID='CFE_ES_HeapBlocksFree') -----
              tr
               td Maximum
               td 
                  span.wh-tlm(tlmID='CFE_ES_HeapMaxBlockSize') -----
  
  .row
    
    .col-lg-12
      .panel.panel-primary
        .panel-heading
          h3.panel-title Console
        .panel-body(onkeydown='if (event.keyCode == 13) cmdSendShellCmd()')
          textarea#ShellOutput(readonly='readonly', style='width: 100%; height: 200px;')
          dl.dl-horizontal
         
          .input-group
            span.input-group-addon Command:
            input#ShellInput.form-control(type='text',placeholder='Enter Text...')
            span.input-group-btn
              button.btn-group.btn-primary(type='button', onclick='cmdSendShellCmd();') Send
         
          dl.dl-horizontal
           .input-group
            span.input-group-addon Onboard Output File:
            input#ShellOutputFile.form-control(type='text')

          dl.dl-horizontal
  .row
    .col-lg-3
      .panel.panel-primary
        .panel-heading
          h3.panel-title Application Control
        .panel-body
          .table-responsive
            table.table.table-hover.table-condensed.table-striped
             tbody
              tr           
               td App Name
               td -----
              tr
               td ID
               td -----
              tr
               td Type
               td -----
              tr
               td Entry Point
               td -----
              tr
               td File name
               td -----
              tr
               td Stack size
               td -----
              tr
               td Module ID
               td -----
              tr
               td Addr valid
               td -----
              tr
               td Code addr
               td -----
              tr
               td Code size
               td -----
              tr
               td Child tasks
               td -----
              tr
               td Data Addr
               td -----
              tr
               td Data Size
               td -----
              tr
               td BSS Addr
               td -----
              tr
               td BSS Size
               td -----
              tr
               td Start Addr
               td -----
              tr
               td Exception action
               td -----
              tr
               td Priority
               td -----
              tr
               td MnTask ID
               td -----
              tr
               td Exec Cntr
               td -----
              tr
               td Main task name
               td -----
          .btn-group(style='margin-top: 10px;')
            button.btn.btn-primary.dropdown-toggle(type='button', data-toggle='dropdown')
              | Commands
              span.caret
            ul#AppCommands.dropdown-menu(role='menu')
              li
                a#CMD_QueryApplication(href='javascript:void(0)') Query application
              li
                a#CMD_StartApplication(href='javascript:void(0)') Start application
              li
                a#CMD_RestartApplication(href='javascript:void(0)') Restart application
              li
                a#CMD_StopApplication(href='javascript:void(0)') Stop application
              li
                a#CMD_ReloadApplication(href='javascript:void(0)') Reload application
              li
                a#CMD_QueryAllTasks(href='javascript:void(0)') Query all tasks
              li
                a#CMD_QueryAll(href='javascript:void(0)') Query all
    
    
    .col-lg-3
      .panel.panel-primary
        .panel-heading
          h3.panel-title Memory
        .panel-body
          .table-responsive
            table.table.table-hover.table-condensed
             tbody
              tr
               td Telemetry received
               td -----
              tr
               td Pool handle
               td -----
              tr
               td Pool size
               td -----
              tr
               td Num blocks requested
               td -----
              tr
               td Check error count
               td -----
              tr
               td Num free bytes
               td -----
         
          .table-responsive
            table.table.table-striped.table-condensed
              thead
                th Block Size
                th Num Created
                th Num Free
              tbody
                tr
                  td -----
                  td -----
                  td -----
                tr
                  td -----
                  td -----
                  td -----
                tr
                  td -----
                  td -----
                  td -----
                tr
                  td -----
                  td -----
                  td -----
                tr
                  td -----
                  td -----
                  td -----
                tr
                  td -----
                  td -----
                  td -----
                tr
                  td -----
                  td -----
                  td -----
                tr
                  td -----
                  td -----
                  td -----
                tr
                  td -----
                  td -----
                  td -----
                tr
                  td -----
                  td -----
                  td -----
                tr
                  td -----
                  td -----
                  td -----
                tr
                  td -----
                  td -----
                  td -----
                tr
                  td -----
                  td -----
                  td -----
                tr
                  td -----
                  td -----
                  td -----
                tr
                  td -----
                  td -----
                  td -----
                tr
                  td -----
                  td -----
                  td -----
                tr
                  td -----
                  td -----
                  td -----
          .btn-group(style='margin-top: 10px;')
            button.btn.btn-primary.dropdown-toggle(type='button', data-toggle='dropdown')
              | Commands
              span.caret
            ul#MemoryCommands.dropdown-menu(role='menu')
              li
                a#CMD_SendPoolStats(href='javascript:void(0)') Send pool stats
              li
                a#CMD_DumpCDStoFile(href='javascript:void(0)') Dump CDS to file
              li
                a#CMD_DeleteCDS(href='javascript:void(0)') Delete CDS
    .col-lg-6
      .panel.panel-primary
        .panel-heading
          h3.panel-title Memory
        .panel-body
          .table-responsive
            table.table.table-hover.table-condensed.table-striped
             tbody
              tr
               td Last update
               td -----
              tr
               td State
               td -----
              tr
               td Mode
               td -----
              tr
               td Trigger count
               td -----
              tr
               td Start
               td -----
              tr
               td End
               td -----
              tr
               td Count
               td -----
              tr
               td Data to write
               td -----
          .table-responsive
            table.table
              thead
                th
                th 0
                th 1
                th 2
                th 3
              tbody
                tr
                  td(style='font-weight: bold;')
                    | Filter mask
                  td
                    | -----
                    span.span-inline-block
                     .btn-toolbar.padleft
                      button.btn.btn-primary#CMD_SetPerfFilterMask0(type='button') Set
                  td
                    | -----
                    span.span-inline-block
                     .btn-toolbar.padleft
                      button.btn.btn-primary#CMD_SetPerfFilterMask1(type='button') Set
                  td
                    | -----
                    span.span-inline-block
                     .btn-toolbar.padleft
                      button.btn.btn-primary#CMD_SetPerfFilterMask2(type='button') Set
                  td
                    | -----
                    span.span-inline-block                   
                     .btn-toolbar.padleft
                      button.btn.btn-primary#CMD_SetPerfFilterMask3(type='button') Set
                tr
                  td(style='font-weight: bold;')
                    | Trigger mask
                  td
                    | -----
                    span.span-inline-block
                     .btn-toolbar.padleft
                      button.btn.btn-primary#CMD_SetPerfTriggerMask0(type='button') Set
                  td
                    | -----
                    span.span-inline-block
                     .btn-toolbar.padleft
                      button.btn.btn-primary#CMD_SetPerfTriggerMask1(type='button') Set
                  td
                    | -----
                    span.span-inline-block
                     .btn-toolbar.padleft
                      button.btn.btn-primary#CMD_SetPerfTriggerMask2(type='button') Set
                  td
                    | -----
                    span.span-inline-block
                     .btn-toolbar.padleft
                      button.btn.btn-primary#CMD_SetPerfTriggerMask3(type='button') Set
          .btn-group(style='margin-top: 10px;')
            button.btn.btn-primary.dropdown-toggle(type='button', data-toggle='dropdown')
              | Commands
              span.caret
            ul#PerfCommands.dropdown-menu(role='menu')
              li
                a#CMD_StartPerfTriggerStart(href='javascript:void(0)') Start in Trigger 'Start' mode
              li
                a#CMD_StartPerfTriggerCenter(href='javascript:void(0)') Start in Trigger 'Center' mode
              li
                a#CMD_StartPerfTriggerEnd(href='javascript:void(0)') Start in Trigger 'End' mode
              li
                a#CMD_StopPerf(href='javascript:void(0)') Stop
   
  script.
    /* Telemetry definitions. */
    console.log("Adding telemetry.");
    
    new CCSDSTelemetry({id:"#CmdCounter", inlineFunc:"text", telemID:"CFE_ES.CmdCounter"});
    new CCSDSTelemetry({id:"#ErrCounter", inlineFunc:"text", telemID:"CFE_ES.ErrCounter"});
    new CCSDSTelemetry({id:"#CFECoreChecksum", inlineFunc:"text", telemID: "CFE_ES.CFECoreChecksum", format:"0x%04x"});
   
    
    new CCSDSTelemetry({id: "#SysLogBytesUsed", inlineFunc:"text", telemID: "CFE_ES.SysLogBytesUsed"});
    new CCSDSTelemetry({id: "#SysLogEntries", inlineFunc:"text", telemID: "CFE_ES.SysLogEntries"});
    new CCSDSTelemetry({id: "#SysLogMode", inlineFunc:"text", telemID: "CFE_ES.SysLogMode"});
    new CCSDSTelemetry({id: "#ERLogIndex", inlineFunc:"text", telemID: "CFE_ES.ERLogIndex"});
    new CCSDSTelemetry({id: "#ERLogEntries", inlineFunc:"text", telemID: "CFE_ES.ERLogEntries"});
    new CCSDSTelemetry({id: "#RegisteredCoreApps", inlineFunc:"text", telemID: "CFE_ES.RegisteredCoreApps"});
    new CCSDSTelemetry({id: "#RegisteredExternalApps", inlineFunc:"text", telemID: "CFE_ES.RegisteredExternalApps"});
    new CCSDSTelemetry({id: "#RegisteredTasks", inlineFunc:"text", telemID: "CFE_ES.RegisteredTasks"});
    new CCSDSTelemetry({id: "#RegisteredLibs", inlineFunc:"text", telemID: "CFE_ES.RegisteredLibs"});
    new CCSDSTelemetry({id: "#ResetType", inlineFunc:"text", telemID: "CFE_ES.ResetType"});
    new CCSDSTelemetry({id: "#ResetSubtype", inlineFunc:"text", telemID: "CFE_ES.ResetSubtype"});
    new CCSDSTelemetry({id: "#ProcessorResets", inlineFunc:"text", telemID: "CFE_ES.ProcessorResets"});
    new CCSDSTelemetry({id: "#MaxProcessorResets", inlineFunc:"text", telemID: "CFE_ES.MaxProcessorResets"});
    new CCSDSTelemetry({id: "#BootSource", inlineFunc:"text", telemID: "CFE_ES.BootSource"});
    new CCSDSTelemetry({id: "#HeapBytesFree", inlineFunc:"text", telemID: "CFE_ES.HeapBytesFree"});
    new CCSDSTelemetry({id: "#HeapBlocksFree", inlineFunc:"text", telemID: "CFE_ES.HeapBlocksFree"});
    new CCSDSTelemetry({id: "#HeapMaxBlockSize", inlineFunc:"text", telemID: "CFE_ES.HeapMaxBlockSize"});
    new CCSDSTelemetry({telemID: "CFE_ES.ShellOutput", onChange: onShellOutputChange});

    /* Command definitions. */
    console.log("Adding commands.");
    new CCSDSCommand({cmdId:'CFE_ES.NOOP', domObjects:[{domId:'#CMD_NOOP'}]});
    new CCSDSCommand({cmdId:'CFE_ES.Reset', domObjects:[{domId:'#CMD_RESET'}]});
    new CCSDSCommand({cmdId:'CFE_ES.WriteSysLog', domObjects:[{domId:'#CMD_WriteSystemLogToFile'}], params:[
      { name:'FileName', type:'text', label:"File name", default:'', length:64, required:false},
      ]});
    new CCSDSCommand({cmdId:'CFE_ES.ClearSysLog', domObjects:[{domId:'#CMD_ClearSysLog'}]});
    new CCSDSCommand({cmdId:'CFE_ES.WriteERLog', domObjects:[{domId:'#CMD_WriteErrorLogToFile'}], params:[
      { name:'FileName', type:'text', label:"File name", default:'', length:64, required:false},
      ]});
    new CCSDSCommand({cmdId:'CFE_ES.ClearERLog', domObjects:[{domId:'#CMD_ClearERLog'}]});
    new CCSDSCommand({cmdId:'CFE_ES.ResetPRCount', domObjects:[{domId:'#CMD_ResetPRCount'}]});
    new CCSDSCommand({cmdId:'CFE_ES.SetMaxPRCount', domObjects:[{domId:'#CMD_SetMaxResets'}], params:[
      { name:'MaxPRCount', type:'number', label:"Maximum count", default:'', required:true},
      ]});
    new CCSDSCommand({cmdId:'CFE_ES.QueryOne', domObjects:[{domId:'#CMD_QueryApplication', grpDomId:'#AppCommands'}], params:[
      { name:'Application', type:'text', label:"Name", default:'', length:20, required:true},
      ]});
    new CCSDSCommand({cmdId:'CFE_ES.StartApp', domObjects:[{domId:'#CMD_StartApplication', grpDomId:'#AppCommands'}], params:[
      { name:'Application', type:'text', label:"Name", default:'', length:20, required:true},
      { name:'AppEntryPoint', type:'text', label:"Entry point", default:'', length:20, required:true},
      { name:'AppFileName', type:'text', label:"File name", default:'', length:64, required:true},
      { name:'StackSize', type:'number', label:"Stack size", default:'', required:true},
      { name:'ExceptionAction', type:'text', label:"Exception action", default:'', length:20, required:true},
      { name:'Priority', type:'number', label:"Priority", default:'', required:true},
      ]});
    new CCSDSCommand({cmdId:'CFE_ES.StopApp', domObjects:[{domId:'#CMD_StopApplication', grpDomId:'#AppCommands'}], params:[
      { name:'Application', type:'text', label:"Name", default:'', length:20, required:true},
      ]});
    new CCSDSCommand({cmdId:'CFE_ES.RestartApp', domObjects:[{domId:'#CMD_RestartApplication', grpDomId:'#AppCommands'}], params:[
      { name:'Application', type:'text', label:"Name", default:'', length:20, required:true},
      ]});
    new CCSDSCommand({cmdId:'CFE_ES.ReloadApp', domObjects:[{domId:'#CMD_ReloadApplication', grpDomId:'#AppCommands'}], params:[
      { name:'Application', type:'text', label:"Name", default:'', length:20, required:true},
      { name:'AppFileName', type:'text', label:"File name", default:'', length:64, required:true},
      ]});
    new CCSDSCommand({cmdId:'CFE_ES.QueryAll', domObjects:[{domId:'#CMD_QueryAll', grpDomId:'#AppCommands'}], params:[
      { name:'FileName', type:'text', label:"File name", default:'', length:64, required:true},
      ]});
    new CCSDSCommand({cmdId:'CFE_ES.QueryAllTasks', domObjects:[{domId:'#CMD_QueryAllTasks', grpDomId:'#AppCommands'}], params:[
      { name:'FileName', type:'text', label:"File name", default:'', length:64, required:true},
      ]});
    new CCSDSCommand({cmdId:'CFE_ES.DeleteCDS', domObjects:[{domId:'#CMD_DeleteCDS', grpDomId:'#MemoryCommands'}], params:[
      { name:'CdsName', type:'text', label:"CDS name", default:'', length:38, required:true},
      ]});
    new CCSDSCommand({cmdId:'CFE_ES.TlmPoolStats', domObjects:[{domId:'#CMD_SendPoolStats', grpDomId:'#MemoryCommands'}], params:[
      { name:'Application', type:'text', label:"Name", default:'', length:20, required:true},
      { name:'PoolHandle', type:'number', label:"Pool handle", default:'0', required:true},
      ]});
    new CCSDSCommand({cmdId:'CFE_ES.DumpCDSReg', domObjects:[{domId:'#CMD_DumpCDStoFile', grpDomId:'#MemoryCommands'}], params:[
      { name:'FileName', type:'text', label:"File name", default:'', length:64, required:true}
      ]});
    new CCSDSCommand({cmdId:'CFE_ES.PerfStopData', domObjects:[{domId:'#CMD_StopPerf', grpDomId:'#PerfCommands'}], params:[
      { name:'FileName', type:'text', label:"File name", default:'', length:64, required:true}
      ]});
       
        
        
        function onShellOutputChange(text)
        {   
            var currentText = $("#ShellOutput").val();
            var newText = currentText + text;
            
            $("#ShellOutput").val(newText);
            
        }
        
        function cmdSendShellCmd()
        {        
            CDH.sendCmd({id:'CFE_ES.ShellCmd', CommandString:$("#ShellInput").val(), OutputFileName:$("#ShellOutputFile").val()});
         
            $("#ShellInput").val("");
            $("#ShellOutput").val("");   
        }
        
    
    
        
        
