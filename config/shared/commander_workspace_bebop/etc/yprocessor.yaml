# this file defines the different processors
# A processor is where TM/TC processing happens inside Yamcs.
#
# Each processor uses a source of TM packets, one or more sources of parameters and a command releaser
#  all of these are optional
#
# Note that when you are adding a telemetryProvider, you are implicitly adding also a XtceTmProcessor that provides parameters


# all the supported processor types
types: [realtime, Archive]



realtime:
    telemetryProvider: 
       class: org.yamcs.StreamTmPacketProvider
       args: 
           streams: ["tm_realtime"]
    commandReleaser:
       class: org.yamcs.StreamTcCommandReleaser
       args:
           stream: "tc_realtime"
    parameterProviders:
       - class: org.yamcs.tctm.StreamParameterProvider
         args:
           stream: "pp_realtime"
       # implements XTCE algorithms
       - class: org.yamcs.algorithms.AlgorithmManager
       # implements provider of parameters from sys_var stream (these are collected and sent on this stream by SystemParametersCollector service)
       - class: org.yamcs.parameter.SystemParametersProvider
       # manages software parameters
       - class: org.yamcs.parameter.SoftwareParameterManager
    config:
        #check alarms and also enable the alarm server (that keeps track of unacknowledged alarms)
        alarm:
            check: true
            server: enabled
        parameterCache:
            enabled: true
            cacheAll: true
            #duration in seconds on how long parameters are kept into cache
            duration: 600
            #maximum number of entries in the cache for one parameter
            maxNumEntries: 4096
        tmProcessor:
         #if container entries fit outside the binary packet, setting this to true will cause the error to be ignored, otherwise an exception will be printed in the yamcs logs
             ignoreOutOfContainerEntries: false


#used to perform step by step archive replays to displays,etc
# initiated from Yamcs Monitor, Yamcs Studio.
# should be renamed to ArchiveReplay
Archive:
    telemetryProvider: 
        class: org.yamcs.tctm.ReplayService
    config:
        #keep a small cache in case new displays are open while the replay is paused, to have the parameters readily available
        parameterCache:
            enabled: true
            cacheAll: true
            maxNumEntries: 8


#used by the ParameterArchive when rebuilding the parameter archive
# no need for parameter cache
ParameterArchive:
    telemetryProvider: 
        class: org.yamcs.tctm.ReplayService
    config:
        parameterCache:
            enabled: false

#used for performing archive retrievals via replays (e.g. parameter-extractor.sh)
# we do not want cache in order to extract the minimum data necessary
ArchiveRetrieval:
    telemetryProvider:
        class: org.yamcs.tctm.ReplayService
    config:
        parameterCache:
            enabled: false

