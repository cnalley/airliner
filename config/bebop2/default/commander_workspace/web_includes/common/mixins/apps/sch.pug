mixin app_specific_scheduler_control(appID)
  -
    var appObj = {};
    for (var idx = 0; idx < fsw.apps.length; ++idx) {
      if(fsw.apps[idx].id === appID) {
        appObj = fsw.apps[idx]
      }
    }
    if(appObj.id !== undefined) {
      var schObj = {};
      for (var idx = 0; idx < fsw.apps.length; ++idx) {
        if(fsw.apps[idx].id === "SCH") {
          schObj = fsw.apps[idx];
        }
      }
      if(schObj.id !== undefined) {
        var schTableObj = {};
        for (var idx = 0; idx < schObj.tables.length; ++idx) {
          if(schObj.tables[idx].id === "SCHED_DEF") {
            schTableObj = schObj.tables[idx].ScheduleEntry;
          }
        }
        if(schTableObj.length !== undefined) {
          var appSchEntryObj = [];
          var appSchGroupObj = [];
          for (var schIdx = 0; schIdx < schTableObj.length; ++schIdx) {
            for (var appMsgIdx = 0; appMsgIdx < appObj.msgs.length; ++appMsgIdx) {
              var strMidxMacro = appObj.msgs[appMsgIdx].macro + "X";
              var groupFound = false;
              var groupMacro = schTableObj[appMsgIdx].GroupData;
              if(schTableObj[schIdx].MessageIndex === strMidxMacro) {
                var slotId = parseInt(schIdx / schObj.SCH_ENTRIES_PER_SLOT);
                var actId = schIdx - (slotId * schObj.SCH_ENTRIES_PER_SLOT);
                appSchEntryObj.push({"slot": slotId, "activity": actId, "entry": schTableObj[schIdx]});
                
                for(var appGrpIdx = 0; appGrpIdx < appSchGroupObj.length; ++appGrpIdx) {
                  if(appSchGroupObj[appGrpIdx] === groupMacro) {
                    groupFound = true;
                  }
                }
                
                if(groupFound == false) {
                  appSchGroupObj.push(groupMacro);
                }
              }
            }
          }
    
  article.col-xs-12.col-sm-12.col-md-12.col-lg-8
    #wid-SCH-Diag-Entries.jarviswidget.jarviswidget-color-blueDark(style='width: 860px' data-widget-editbutton='false')
      header
        span.widget-icon
          i.fa.fa-table
        h2 Scheduler 
          button.btn.btn-xs.btn-primary.btn-labeled(data-sage={cmd:{name:'/CFS/SCH/SendDiagTlm'}}) Send Schedule
      div
        .jarviswidget-editbox
          input.form-control(type='text')
        .widget-body
          .table-responsive
            table.table.table-condensed
              tbody
                tr
                  th(style='width: 150px') Cmd Count
                  td
                    span(data-sage={tlm: [{name:'/CFS/SCH/CmdCounter'}]}) ---
                tr
                  th Error Count
                  td
                    span(data-sage={tlm: [{name:'/CFS/SCH/ErrCounter'}]}) ---
          .table-responsive
            table.table.table-bordered.table-condensed
              thead
                tr
                  th(style="width: 100px") Slot #
                  th(style="width: 100px") Activity #
                  th(style="width: 150px") State
                  th MsgID
                  th(style="width: 150px") Action
              tbody
                - for (var idx = 0; idx < appSchEntryObj.length; ++idx) {
                    - var entryID = (appSchEntryObj[idx].slot * schObj.SCH_ENTRIES_PER_SLOT) + appSchEntryObj[idx].activity;
                    - var strSlotID = '' + appSchEntryObj[idx].slot;
                    - var strActID =  '' + appSchEntryObj[idx].activity;
                    - var strEntryID = '' + entryID;
                    - var tlmEntryState = {tlm:[{name:'/CFS/SCH/EntryState_'+strEntryID}]};
                    - var tlmMsgID = {tlm:[{name:'/CFS/SCH/MsgID_'+entryID}]};
                    - var cmdEnableEntry = {cmd: {name:'/CFS/SCH/EnableEntry', argument:[{name:'Slot', value:strSlotID},{name:'Entry', value:strActID}]}};
                    - var cmdDisableEntry = {cmd: {name:'/CFS/SCH/DisableEntry', argument:[{name:'Slot', value:strSlotID},{name:'Entry', value:strActID}]}};
                    tr
                      td #{strSlotID}
                      td #{strActID}
                      td 
                        span(data-sage= tlmEntryState) ---
                      td
                        span(data-sage= tlmMsgID) #{appSchEntryObj[idx].entry.MessageIndex}
                      td
                        .btn-group.dropup
                          button.btn.btn-xs.btn-primary.btn-labeled(data-sage= cmdEnableEntry) Ena
                          button.btn.btn-xs.btn-primary.btn-labeled(data-sage= cmdDisableEntry) Dis
                - };
          .table-responsive
            table.table.table-bordered.table-condensed
              thead
                tr
                  th(style="width: 200px") Group 
                  th(style="width: 150px") Action
              tbody
                - for (var grpIdx = 0; grpIdx < appSchGroupObj.length; ++grpIdx) {
                  - var grpID = appSchGroupObj[grpIdx];
                  - var strGrpID = '' + grpID;
                  - var cmdEnableGroup = {cmd: {name:'/CFS/SCH/EnableGroup', argument:[{name:'Group', value:strGrpID}]}};
                  - var cmdDisableGroup = {cmd: {name:'/CFS/SCH/DisableGroup', argument:[{name:'Group', value:strGrpID}]}};
                  tr
                    td(style='font-family: monospace') #{strGrpID}
                    td
                      .btn-group.dropup
                        button.btn.btn-xs.btn-primary.btn-labeled(data-sage= cmdEnableGroup) Ena
                        button.btn.btn-xs.btn-primary.btn-labeled(data-sage= cmdDisableGroup) Dis
                - };
  -
        }
      }
    }
