- var pluginName = query.pluginName;

div#f4_panel

script.

  
    
  loadSVG('panels/panel_F4.svg');

  
  function loadSVG(SVGFile)
  {      
      var ledPyroMasterArm        = {};
      var swPyroMasterArm         = {};
      var swCMPropAct             = {};
      var swCMSPSep               = {};
      var swDrogueDeploy          = {};
      var swMainDeploy            = {};
      var swRiserCutUprightDeploy = {};
  
      var loadXML = new XMLHttpRequest;
      loadXML.onload = callback;
      loadXML.open("GET", SVGFile, true);
      loadXML.send();
      var draw = SVG('f4_panel').viewbox(0, 0, 1030, 260);
      function callback()
      {
          //---responseText---
          var svgFileString=loadXML.responseText;
          draw.svg(svgFileString);
          
          ledPyroMasterArm        = new LED(draw, 'OFF', '#00ff00',  175, 40, 0, 3);
          swPyroMasterArm         = new Switch(draw, 'DOWN',  103, 116);
          swCMPropAct             = new Switch(draw, 'DOWN',  254, 116);
          swCMSPSep               = new Switch(draw, 'DOWN',  404, 116);
          swDrogueDeploy          = new Switch(draw, 'DOWN',  555, 116);
          swMainDeploy            = new Switch(draw, 'DOWN',  706, 116);
          swRiserCutUprightDeploy = new Switch(draw, 'DOWN',  857, 116);
          
          session.subscribe([{name:'/panel-display/sw1Status/digital'}], function (data) { 
              var channelData = data[0].sample[0].value;
                         
              for(var entryIndex in SwitchMap) {
                  var entry = SwitchMap[entryIndex];

                  if(typeof entry.switch === 'function') {
                      var pass = true;
                      
                      for(var logicCheckIndex in entry.logic) {
                          var logicCheck = entry.logic[logicCheckIndex];
                          
                          if(channelData[logicCheck.channel] != logicCheck.state) {
                              pass = false;
                          }
                      }
                      
                      if(pass == true) {
                          entry.switch();
                      }
                  }
              }
          });
      }
      
  
  var SwitchMap = [
      { logic: [{channel:  6, state: 1},{channel:  9, state: 0}], switch: function(){swPyroMasterArm.up();} },
      { logic: [{channel:  6, state: 0},{channel:  9, state: 1}], switch: function(){swPyroMasterArm.down();} },
      { logic: [{channel: 10, state: 0},{channel:  5, state: 1}], switch: function(){swCMPropAct.up();} },
      { logic: [{channel: 10, state: 1},{channel:  5, state: 0}], switch: function(){swCMPropAct.down();} },
      { logic: [{channel: 11, state: 0},{channel:  4, state: 1}], switch: function(){swCMSPSep.up();} },
      { logic: [{channel: 11, state: 1},{channel:  4, state: 0}], switch: function(){swCMSPSep.down();} },
      { logic: [{channel: 12, state: 0},{channel:  3, state: 1}], switch: function(){swDrogueDeploy.up();} },
      { logic: [{channel: 12, state: 1},{channel:  3, state: 0}], switch: function(){swDrogueDeploy.down();} },
      { logic: [{channel: 13, state: 0},{channel:  2, state: 1}], switch: function(){swMainDeploy.up();} },
      { logic: [{channel: 13, state: 1},{channel:  2, state: 0}], switch: function(){swMainDeploy.down();} },
      { logic: [{channel: 14, state: 0},{channel:  1, state: 1}], switch: function(){swRiserCutUprightDeploy.up();} },
      { logic: [{channel: 14, state: 1},{channel:  1, state: 0}], switch: function(){swRiserCutUprightDeploy.down();} },
  ];
  }
