extends ../../web_includes/common/layout

block includes
  include ../../web_includes/common/common_includes.pug

block header
        i.fa-fw.fa.fa-signal
        | Pilot Control (Experimental)

block main 
               
  .row.row-fluid
    article.col-xs-12.col-sm-12.col-md-12.col-lg-12
      #wid-Flight-Controls.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false',data-widget-colorbutton='false',data-widget-deletebutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 Controls
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body.center
            .btn-group-vertical.btn-group-lg.btn-space
                button.btn.btn-primary(data-sage={cmd: {name: '/CFS/PX4/VehicleLaunch'}}) Launch
                button.btn.btn-primary(data-sage={cmd: {name: '/CFS/PX4/VehicleLand'}}) Land
            .btn-group.btn-group-lg.btn-space
                button.btn.btn-primary(data-sage={cmd: {name: '/CFS/PX4/VehicleArm'}}) Arm
                button.btn.btn-primary(data-sage={cmd: {name: '/CFS/PX4/VehicleDisarm'}}) Disarm
            .btn-group-vertical.btn-group-lg.btn-space
                button.btn.btn-primary(data-sage={cmd: {name: '/CFS/PX4/VehicleChangeMode'}}) Set Mode
                
    article.col-xs-12.col-sm-12.col-md-6.col-lg-6
      #wid-Flight-HUD.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false',data-widget-colorbutton='false',data-widget-deletebutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 Gamepad
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body.no-padding(style="height:500px")
            #gamepadPrompt
            #gamepadDisplay

  script.
    var hasGP = false;
    var repGP;
	    
    function canGame() {
      return "getGamepads" in navigator;
    }

    function reportOnGamepad() {
      var gp = navigator.getGamepads()[0];
      var html = "";
      html += "id: "+gp.id+"<br/>";
		
      for(var i=0;i<gp.buttons.length;i++) {
        html+= "Button "+(i+1)+": ";
        if(gp.buttons[i].pressed) html+= " pressed";
          html+= "<br/>";
      }
		
      for(var i=0;i<gp.axes.length; i+=2) {
        html+= "Stick "+(Math.ceil(i/2)+1)+": "+gp.axes[i]+","+gp.axes[i+1]+"<br/>";
      }
          
      $("#gamepadDisplay").html(html);
       
      var X = gp.axes[2] * 1000;
      var Y = gp.axes[3] * 1000;
      var Z = (gp.axes[1] * -500) + 500;
          
      session.sendCommand('/CFS/PX4/ManualControlSetpoint', [
        {name:'X', value:Math.round(X).toString()},
        {name:'Y', value:Math.round(Y).toString()},
        {name:'Z', value:Math.round(Z).toString()},
        {name:'InputMask', value:'0x7000000'}
      ]);
      }
	    
      if(canGame()) {
        var prompt = "To begin using your gamepad, connect it and press any button!";
        $("#gamepadPrompt").text(prompt);
          	
        $(window).on("gamepadconnected", function() {
          hasGP = true;
          $("#gamepadPrompt").html("Gamepad connected!");
          console.log("connection event");
          repGP = window.setInterval(reportOnGamepad,100);
        });
        
        $(window).on("gamepaddisconnected", function() {
          console.log("disconnection event");
          $("#gamepadPrompt").text(prompt);
          window.clearInterval(repGP);
        });

        //setup an interval for Chrome
        var checkGP = window.setInterval(function() {
          console.log('checkGP');
          if(navigator.getGamepads()[0]) {
            if(!hasGP) $(window).trigger("gamepadconnected");
            window.clearInterval(checkGP);
          }
        }, 500);
      }    
