extends ../../../web_includes/common/layout

block includes
  include ../../../web_includes/common/common_includes.pug

block header
        i.fa-fw.fa.fa-signal
        | External Applications

block main
  .row.row-fluid
    article.col-xs-10.col-sm-8.col-md-6.col-lg-6(style='max-width:450px')
      #wid-EA-CmdAndData.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 General
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            .table-responsive
              table.table.table-condensed
                tbody
                  tr
                    th Cmd Count
                    td
                      span(data-sage={tlm: [{name:'/CFS/EA/CmdCounter'}]}) ---
                  tr
                    th Error Count
                    td
                      span(data-sage={tlm: [{name:'/CFS/EA/ErrCounter'}]}) ---
                  tr
                    th Active App
                    td
                      span(data-sage={tlm: [{name:'/CFS/EA/ActiveApp'}]}) ---
                  tr
                    th Active App CPU Utilization
                    td
                      span(data-sage={tlm: [{name:'/CFS/EA/ActiveAppUtil'}]}) ---
                  tr
                    th Active App PID
                    td
                      span(data-sage={tlm: [{name:'/CFS/EA/ActiveAppPID'}]}) ---
                  tr
                    th Last App Run
                    td
                      span(data-sage={tlm: [{name:'/CFS/EA/LastAppRun'}]}) ---
                  tr
                    th Last App Status
                    td
                      span(data-sage={tlm: [{name:'/CFS/EA/LastAppStatus'}]}) ---

            footer
              button.btn.btn-primary(data-sage={cmd: {name:'/CFS/EA/NoOp'}}) No-Op
              button.btn.btn-primary(data-sage={cmd: {name:'/CFS/EA/Reset'}}) Reset
              button.btn.btn-primary(data-sage={cmd: {name:'/CFS/EA/StartApp'}}) Start App
              button.btn.btn-primary(data-sage={cmd: {name:'/CFS/EA/StopApp'}}) Stop App
                    
  .row
  
    article.col-xs-12.col-sm-12.col-md-6.col-lg-4(style={width:'600px'})
      #wid-HS-CPUtil.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 CPU Utilization
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            #CPU_Util.chart(style={height:'425px', width:'100%'}) 
                                        
  .row
    +app_specific_telemetry_control("EA")
                                  
  .row          
    +app_specific_mempools("EA")
    
  .row
    +app_specific_application_control("EA") 
    +registered_applications() 
  
  .row
    +app_specific_table_control("EA")
    
  .row
    +app_specific_scheduler_control("EA")

  
                  

  script.
    var CpuUtilData = [];

    $(function () {
      function legendFormatter(label, series) {
        return '<div ' + 
           'style="color:white;font-size:8pt;text-align:left;padding:4px;padding-left:10px">' +
           label + '</div>';
      };

      var UtilGraph = $.plot($("#CPU_Util"), [],{
          xaxis : {
            mode : 'time',
            font : {
              color: "#ffffff"
            }
          },
          yaxis : {
            min : 0,
            max : 100,
            font : {
              color: "#ffffff"
            }
          },
          series : {
            lines : {
              show : true
            },
            points: {
              show: false
            }
          },
          legend: {
            show: true,
            labelFormatter: legendFormatter,
            labelBoxBorderColor: 'rgba(255, 255, 255, 0.0)',
            noColumns: 1,
            position: 'ne',
            margin: [10,10],
            backgroundColor: null,
            backgroundOpacity: 0,
            container: null,
            sorted: false
          },
          grid: {
            show: true,
            //aboveData: boolean
            //color: '#ffffff',
            //backgroundColor: color/gradient or null
            //margin: number or margin object
            //labelMargin: number
            //axisMargin: number
            //markings: [{ color: "#ffffff" }],
            //markings: array of markings or (fn: axes -> array of markings)
            //borderWidth: number or object with "top", "right", "bottom" and "left" properties with different widths
            //borderColor: color or null or object with "top", "right", "bottom" and "left" properties with different colors
            //minBorderMargin: number or null
            //clickable: boolean
            //hoverable: boolean
            //autoHighlight: boolean
            //mouseActiveRadius: number
          }
        }
      );

      var CpuUtilCount = 0;
      var MaxCount = 120;
      var ignoreCount = 3;
      var prevCpuUtil = -1;
      var updateInterval = 1000;
      var count = 0;

      session.subscribe({
        tlm: [
          {name: '/CFS/EA/ActiveAppUtil'}
        ]}, 
        function (params) {
          count = count + 1;
          if(ignoreCount > 0){
            ignoreCount = ignoreCount - 1;
          } else { 
            if (CpuUtilData.length >= MaxCount) {
              CpuUtilData = CpuUtilData.slice(1);
            }

            console.log('' + count + ': ' + params);
            console.log(params);

            var timeStamp = new Date(params.acquisitionTime);
            var CpuUtil = params.engValue.floatValue;
             
            CpuUtilData.push([timeStamp, CpuUtil]);
          }
      });

      function update() {
        UtilGraph.setData(
          [{
            data: CpuUtilData,
            label: "CPU Utilization",
            color: '#ff00ff',
            threshold: [{
              below: 5,
              color: '#ff00ff'
            },{
              below: 7,
              color: "yellow"
            },{
              below: 100,
              color: "red"
            }]
          }]);


        // since the axes don't change, we don't need to call plot.setupGrid()
        UtilGraph.setupGrid();
        UtilGraph.draw();
        setTimeout(update, updateInterval);
      }
          
      update();
    });
                  
