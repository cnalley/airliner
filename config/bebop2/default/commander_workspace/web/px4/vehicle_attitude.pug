extends ../../web_includes/common/layout

block includes
    include ../../web_includes/common/common_includes.pug


block header
        i.fa-fw.fa.fa-signal
        | Vehicle Attitude

block main
    .row.row-fluid
      +msg_macro_specific_telemetry_control([{macro: 'PX4_VEHICLE_ATTITUDE_MID'}])
      
    .row.row-fluid
      article.col-xs-10.col-sm-6.col-md-6.col-lg-6
        #wid-SM.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
          header(style="overflow:hidden;")
            span.widget-icon
              i.fa.fa-table
            h2 Vehicle Attitude
          div
            .jarviswidget-editbox
              input.form-control(type='text')
            .widget-body
              #Attitude(style="width:100%; height:300px;")

      article.col-xs-10.col-sm-6.col-md-6.col-lg-6(style="max-width:450px")
        #wid-SA.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
          header(style="overflow:hidden;")
            span.widget-icon
              i.fa.fa-table
            h2 Sensor - Accelerometer
          div
            .jarviswidget-editbox
              input.form-control(type='text')
            .widget-body
              .table-responsive
                table.table.table-condensed
                  tbody
                    tr
                      th Timestamp
                      td
                        span.format-microseconds(data-sage={'tlm': [{'name': '/CFS/PX4/VA_Timestamp'}]}) ---
                    tr
                      th Roll Speed
                      td
                        span(data-sage={'tlm': [{'name': '/CFS/PX4/VA_RollSpeed'}]}) ---
                    tr
                      th Pitch Speed
                      td
                        span(data-sage={'tlm': [{'name': '/CFS/PX4/VA_PitchSpeed'}]}) ---
                    tr
                      th Yaw Speed
                      td
                        span(data-sage={'tlm': [{'name': '/CFS/PX4/VA_YawSpeed'}]}) ---
                    tr
                      th Q[0]
                      td
                        span(data-sage={'tlm': [{'name': '/CFS/PX4/VA_Q_0'}]}) ---
                    tr
                      th Q[1]
                      td
                        span(data-sage={'tlm': [{'name': '/CFS/PX4/VA_Q_1'}]}) ---
                    tr
                      th Q[2]
                      td
                        span(data-sage={'tlm': [{'name': '/CFS/PX4/VA_Q_2'}]}) ---
                    tr
                      th Q[3]
                      td
                        span(data-sage={'tlm': [{'name': '/CFS/PX4/VA_Q_3'}]}) ---
                    tr
                      th Yaw
                      td
                        span#Yaw ---
                    tr
                      th Pitch
                      td
                        span#Pitch ---
                    tr
                      th Roll
                      td
                        span#Roll ---


      script.
        $(function () {
            var dataplotDef = {
                'data': [
                    { 'label': 'Roll',
                      'color': '#ff00ff'
                    },
                    { 'label': 'Pitch',
                      'color': '#00ffff'
                    },
                    { 'label': 'Yaw',
                      'color': '#ffff00'
                    }
                ],
                'options': {
                    'yaxis' : {
                        'min' : -180.0,
                        'max' : 180.0
                    }
                }
            };
    
            var dataplot = new SageTimeSeriesDataplot($('#Attitude'), dataplotDef);
        
        session.subscribe({
          homogeneity: {tolerance: 0},
          'tlm': [
           {'name': '/CFS/PX4/VA_Q_0'},
           {'name': '/CFS/PX4/VA_Q_1'},
           {'name': '/CFS/PX4/VA_Q_2'},
           {'name': '/CFS/PX4/VA_Q_3'}
           ]},
           function (params) {

                   var q1 = params[0].engValue.floatValue;
                       var q2 = params[1].engValue.floatValue;
                       var q3 = params[2].engValue.floatValue;
                       var q4 = params[3].engValue.floatValue;

                       //var phi = Math.atan2((q1*q3)+(q2*q4), (q1*q4)-(q2*q3));
                       //var theta = Math.acos(-(q1*q1)-(q2*q2)+(q3*q3)+(q4*q4));
                       //var psi = Math.atan2((q1*q3)-(q2*q4),(q2*q3)+(q1*q4));


                       var phi = Math.atan2(2*((q3*q4)+(q1*q2)), 1.0-2.0*((q2*q2)-(q3*q3)));
                       var t = 2.0 * (q2*q4+q1*q3);
                       if(t>1){
                       t = 1;
                       }
                       else if(t<-1){
                       t = -1;
                       }
                       var theta =Math.asin(t);
                       var psi = Math.atan2(2.0*((q2*q3)+(q1*q4)),1.0-2.0*((q3*q3)+(q4*q4)));
                  
                       
                        
                       var roll = (phi*360) / (2 * 3.1415926);
                       var pitch = (theta*360) / (2 * 3.1415926);
                       var yaw = (psi*360) / (2 * 3.1415926);

                       $('#Roll').html(roll);
                       $('#Pitch').html(pitch);
                       $('#Yaw').html(yaw);
                       
                       dataplot.addData([
                           {acquisitionTime: params[0].acquisitionTime, engValue: {floatValue: roll}},
                           {acquisitionTime: params[1].acquisitionTime, engValue: {floatValue: pitch}},
                           {acquisitionTime: params[2].acquisitionTime, engValue: {floatValue: yaw}},
                       ]);

           }
       );
       
        });
